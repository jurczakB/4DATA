Quizz DBT (Data Build Tool) - Niveau Facile

Qu’est-ce que DBT ?
A) Un outil permettant de transformer les données directement dans un Data Warehouse ✅
B) Un langage de programmation spécifique à l’ETLC) Un orchestrateur de pipelines de donnéesD) Une solution d’entreposage de données

Dans quel type d’architecture DBT est-il utilisé ?
A) ETLB) ELT ✅
C) Data MeshD) Data Lake

Quel fichier définit la configuration globale d’un projet DBT ?
A) profiles.ymlB) dbt_project.yml ✅
C) sources.ymlD) config.yml

Quelle est la commande pour exécuter tous les modèles DBT ?
A) dbt executeB) dbt compileC) dbt run ✅
D) dbt start

Quelle est la commande pour tester la connexion entre DBT et le Data Warehouse ?
A) dbt connectB) dbt debug ✅
C) dbt test connectionD) dbt check

Quel est le rôle de ref() dans DBT ?
A) Référencer un modèle DBT existant ✅B) Référencer une table brute d’un entrepôt de donnéesC) Transformer une table en vue temporaireD) Rendre un modèle dynamique

Que permet la fonction source() dans DBT ?
A) Référencer un modèle DBTB) Référencer une table brute dans le Data Warehouse ✅C) Appliquer une transformation SQLD) Définir une source temporaire

Quelle commande permet de générer la documentation interactive d’un projet DBT ?
A) dbt docs generate ✅B) dbt docs serveC) dbt show docsD) dbt docs start

Quel type de fichier permet de tester les modèles DBT ?
A) schema.yml ✅B) profiles.ymlC) dbt_project.ymlD) tests.yml

Comment exécuter un seul modèle DBT ?
A) dbt run --model nom_du_modeleB) dbt run --select nom_du_modele ✅C) dbt execute --model nom_du_modeleD) dbt start nom_du_modele

Quelle est la fonction principale de DBT ?
A) Transformer les données directement dans le Data Warehouse ✅
B) Extraire et charger des données depuis des sources externes
C) Remplacer un ETL complet
D) Gérer l’infrastructure des bases de données

Quelle extension de fichier est utilisée pour écrire un modèle DBT ?
A) .dbt
B) .sql ✅
C) .yaml
D) .json

Où peut-on définir les tests pour valider la qualité des données dans DBT ?
A) Dans dbt_project.yml
B) Dans profiles.yml
C) Dans schema.yml ✅
D) Dans config.yml

Quel test intégré permet de vérifier qu’une colonne ne contient pas de valeurs nulles ?
A) not_null ✅
B) unique
C) relationships
D) check_values

Quelle commande permet d’installer un adaptateur pour DBT, par exemple pour PostgreSQL ?
A) dbt install postgres
B) pip install dbt-postgres ✅
C) dbt adapter add postgres
D) dbt add postgres


 ✅
D) dbt_project.yml

Quelle commande permet d’exécuter uniquement les modèles modifiés récemment ?
A) dbt run --select modified
B) dbt run --select state:modified ✅
C) dbt incremental
D) dbt state run

Quel est l’objectif principal des snapshots dans DBT ?
A) Garder un historique des changements ✅
B) Réduire la taille des données
C) Remplacer automatiquement les valeurs nulles
D) Optimiser les performances des requêtes

Quelle commande permet de tester tous les modèles d’un projet DBT ?
A) dbt validate
B) dbt test ✅
C) dbt check
D) dbt verify

Quel paramètre permet d’optimiser la gestion des partitions dans BigQuery et Snowflake ?
A) partition_by ✅
B) cluster_by ✅
C) index_by
D) sort_by

Quelle est la meilleure stratégie pour éviter la duplication des données dans un modèle incremental ?
A) Ajouter une clause WHERE dynamique ✅
B) Utiliser un unique_key ✅
C) Ajouter un index sur la clé primaire
D) Créer un snapshot à chaque exécution

Comment visualiser la hiérarchie des modèles DBT ?
A) dbt lineage
B) dbt docs generate puis dbt docs serve ✅
C) dbt compile
D) dbt deps

Comment exécuter uniquement un modèle et tous ses dépendants ?
A) dbt run --select +nom_du_modele ✅
B) dbt run --select nom_du_modele+ ✅
C) dbt run --models nom_du_modele
D) dbt execute --model nom_du_modele

Quelle est la différence entre dbt compile et dbt run ?
A) dbt compile génère le SQL sans l’exécuter ✅
B) dbt run exécute le SQL généré ✅
C) dbt compile exécute uniquement les modèles incrémentaux
D) dbt run crée des vues système

Quelle commande permet de documenter un modèle DBT ?
A) Ajouter une description dans schema.yml ✅
B) Ajouter un commentaire dans dbt_project.yml
C) Ajouter un champ doc: dans profiles.yml
D) Exécuter dbt docs generate ✅

Quelle est la meilleure approche pour organiser un projet DBT structuré ?
A) Séparer les modèles en dossiers staging, marts, snapshots ✅
B) Placer tous les modèles dans le même dossier
C) Ne pas utiliser de ref() et référencer directement les tables
D) Documenter les transformations avec schema.yml ✅

Comment exécuter uniquement les modèles marqués avec un tag spécifique ?
A) dbt run --select tag:finance ✅
B) dbt run --tags finance
C) dbt execute --filter finance
D) dbt run --filter tag=finance

Quelle est la meilleure façon d’intégrer DBT dans un pipeline CI/CD ?
A) Automatiser l’exécution avec GitHub Actions ✅
B) Tester les modèles avant de les fusionner ✅
C) Déployer les modèles avec dbt deploy
D) Exécuter dbt compile à chaque changement ✅


Niveau Difficile

Quelle est la différence principale entre une matérialisation incremental et un snapshot ?
A) incremental met à jour les données en fonction d'une clé unique ✅
B) snapshot garde l'historique des modifications des enregistrements ✅
C) incremental est utilisé uniquement pour les tables externes
D) snapshot est plus rapide que incremental

Comment exécuter uniquement les modèles modifiés par rapport à la dernière exécution ?
A) dbt run --select state:modified ✅
B) dbt run --select modified
C) dbt incremental
D) dbt state run

Quelle est la meilleure façon de surveiller les performances des modèles DBT en production ?
A) Utiliser dbt debug ✅
B) Mettre en place un monitoring avec Datadog ou Prometheus ✅
C) Exécuter dbt logs pour voir les performances en temps réel
D) Configurer une alerte dans dbt_project.yml

Quelle stratégie d’incrémentation est recommandée pour Snowflake et BigQuery ?
A) merge ✅
B) delete+insert
C) overwrite
D) append ✅

Quelle est la commande permettant de voir l’arborescence des dépendances entre modèles ?
A) dbt docs serve ✅
B) dbt lineage
C) dbt deps
D) dbt compile

Quelle est la meilleure façon de gérer les erreurs lors de l'exécution d'un pipeline DBT dans Dagster ?
A) Implémenter un rollback automatique en cas d’échec ✅
B) Analyser les logs de Dagster pour identifier les erreurs ✅
C) Désactiver la gestion des erreurs et relancer le pipeline manuellement
D) Exécuter dbt test après dbt run pour détecter les anomalies ✅

Quel est le risque principal d'une mauvaise gestion des snapshots ?
A) Une perte de données
B) Une accumulation excessive de versions non nécessaires ✅
C) Un conflit entre strategy: timestamp et strategy: check ✅
D) Une exécution plus rapide des transformations

Comment optimiser l’exécution des modèles DBT dans un Data Warehouse volumineux ?
A) Utiliser partition_by et cluster_by sur les tables ✅
B) Réduire la taille des requêtes en filtrant les données en amont ✅
C) Exécuter les modèles en mode ephemeral
D) Stocker toutes les transformations en mémoire pour éviter les requêtes SQL

Quelle est la meilleure façon d’intégrer DBT dans un pipeline CI/CD ?
A) Automatiser l’exécution avec GitHub Actions ✅
B) Lancer dbt test automatiquement avant chaque merge ✅
C) Exécuter dbt run --select all après chaque commit
D) Utiliser dbt deploy pour charger les modèles

Comment gérer des environnements multiples (dev, staging, prod) dans DBT ?
A) Définir plusieurs cibles (targets) dans profiles.yml ✅
B) Utiliser une variable d’environnement pour définir l’environnement actif ✅
C) Créer un projet DBT séparé pour chaque environnement
D) Modifier manuellement dbt_project.yml avant chaque exécution




Niveau Expert

Vous travaillez sur un projet DBT où le temps d’exécution des modèles incremental devient trop long. Quelle est la meilleure approche pour optimiser leur performance ?
A) Remplacer les modèles incremental par des tables
B) Utiliser partition_by et cluster_by pour réduire le scan des données ✅
C) Recalculer toute la table à chaque exécution
D) Implémenter un merge pour éviter les doublons ✅


Votre équipe souhaite monitorer en temps réel les exécutions de DBT. Quel outil externe est le plus adapté pour détecter les anomalies de performance ?
A) Metabase
B) Prometheus ✅
C) Datadog ✅
D) Snowflake Query Profiler ✅

Un Data Engineer découvre que plusieurs transformations DBT ralentissent considérablement les requêtes analytiques. Quelle est la cause la plus probable ?
A) Mauvaise gestion des index et partitionnements ✅
B) Utilisation excessive des CTE (WITH statements)
C) Trop de dépendances entre modèles ✅
D) Exécution de dbt compile au lieu de dbt run

Un modèle incremental insère des doublons malgré l’utilisation d’une clé unique (unique_key). Quelle solution est la plus adaptée ?
A) Passer de la stratégie append à merge ✅
B) Ajouter une clause WHERE filtrant les doublons
C) Supprimer et recréer la table à chaque exécution
D) Activer les logs pour analyser le problème ✅

Vous migrez un projet DBT de Redshift vers BigQuery. Quelle adaptation est nécessaire pour maintenir les performances ?
A) Remplacer sort keys par cluster_by ✅
B) Passer des delete+insert à merge ✅
C) Changer le format des requêtes SQL
D) Supprimer les tests de qualité des données

Une équipe BI demande un reporting quotidien basé sur des agrégats complexes. Comment assurer un bon équilibre entre performance et fraîcheur des données ?
A) Utiliser une matérialisation table pour persister les données agrégées ✅
B) Passer les modèles en view pour obtenir des données en temps réel
C) Mettre en place un modèle incremental ✅
D) Exécuter dbt run toutes les heures

Vous devez intégrer un modèle DBT complexe dans un pipeline Dagster. Quelle approche permet d’assurer une exécution optimale ?
A) Définir des assets DBT dans Dagster ✅
B) Ordonner les dépendances des tâches dans Dagster ✅
C) Exécuter dbt run directement sans gestion des tâches
D) Ne pas inclure DBT dans l’orchestration

Un analyste Data vous informe que certaines tables générées par DBT ont des valeurs incorrectes. Quelle est la meilleure manière d’identifier et résoudre ce problème ?
A) Exécuter dbt test pour valider les données ✅
B) Vérifier les dépendances entre modèles avec dbt docs generate ✅
C) Forcer la recréation complète des tables
D) Activer le mode --debug lors des exécutions ✅

Vous devez éviter que DBT surcharge Snowflake avec des requêtes coûteuses. Quelle est la meilleure stratégie pour réduire l’impact des exécutions ?
A) Réduire la fréquence des exécutions des modèles ✅
B) Utiliser cluster_by sur les modèles les plus volumineux ✅
C) Changer la matérialisation des tables en views
D) Éviter les modèles incremental

Comment garantir un déploiement sécurisé et contrôlé de DBT en production ?
A) Utiliser des branches Git dédiées (feature, staging, main) ✅
B) Implémenter une validation CI/CD (dbt test, dbt run --dry-run) ✅
C) Exécuter tous les modèles DBT directement en production sans validation
D) Surveiller en temps réel les métriques et logs des exécutions ✅